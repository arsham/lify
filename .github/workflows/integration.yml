name: Continues Integration

on:
  push:
    branches: [master]
  pull_request:
    branches:
      - master
      - feature/*
      - bugfix/*
      - refactor/*
      - chore/*

jobs:
  label:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/labeler@v3
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go: ["1.21.x"]
    name: Test with Go ${{ matrix.go }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      DISPLAY: ":99.0"
    defaults:
      run:
        shell: bash

    steps:
      - name: Git
        run: |
          # See actions/checkout#135
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y libasound2-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev xvfb gcc

      - name: Xvfb
        if: runner.os == 'Linux'
        run: |
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Run Mage
        uses: magefile/mage-action@v2
        with:
          install-only: true

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go }}

      - name: Running Tests
        # run: xCGO_ENABLED=1 vfb-run go test -v ./...
        run: go test -v ./...

  audit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ["1.21.x"]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go }}

      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y libasound2-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev xvfb gcc

      - name: Check for go vulnerabilities
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...

      - name: WriteGoList
        run: go list -json -deps > go.list

      - name: Nancy
        uses: sonatype-nexus-community/nancy-github-action@main

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ["1.21.x"]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          args: --timeout 5m0s
